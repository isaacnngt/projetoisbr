/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import Controle.Conexao;
import Utilitarios.Msg;
import Utilitarios.UpperCaseField;
import Utilitarios.ValidaEnter;
import java.awt.Font;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

public class TelaCadastroMedicos extends javax.swing.JFrame {

    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    /**
     * Creates new form TelaPesquisaPaciente
     */
    public TelaCadastroMedicos() {
        initComponents();
        setIcon();
        conexao = Conexao.conector();
        listarMedicos();
        populaJComboBoxEspecialidades();
//        ContarRegistros();
        ValidaEnter ve = new ValidaEnter();
        ve.ValidaEnterPainel(jPanel3);
        ve.ValidaEnterPainel(jPanel3);
        // chama a classe letras maiusculas
        txtCrm.setDocument(new UpperCaseField(100));
        txtNomeMedico.setDocument(new UpperCaseField(100));
        txtEndercoMedico.setDocument(new UpperCaseField(100));
        txtCidadeMedico.setDocument(new UpperCaseField(100));
        txtTelefoneMedico.setDocument(new UpperCaseField(100));
        AutoCompleteDecorator.decorate(jcEspecialidades);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnSair1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtCrm = new javax.swing.JTextField();
        txtEndercoMedico = new javax.swing.JTextField();
        txtCidadeMedico = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNomeMedico = new javax.swing.JTextField();
        txtTelefoneMedico = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jcEspecialidades = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        JcUFEndereco = new javax.swing.JComboBox<>();
        JcUFCRM = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        btnCadEspecialidades = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMedicos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Profissional");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Cadastro Profissional");

        btnSair1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSair1.setForeground(new java.awt.Color(51, 51, 51));
        btnSair1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagensTelas/Sair.png"))); // NOI18N
        btnSair1.setText("SAIR");
        btnSair1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSair1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 443, Short.MAX_VALUE)
                .addComponent(btnSair1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnSair1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 740, -1));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnNovo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNovo.setForeground(new java.awt.Color(51, 51, 51));
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagensTelas/Novo.png"))); // NOI18N
        btnNovo.setText("NOVO");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(51, 51, 51));
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagensTelas/Salvar.png"))); // NOI18N
        btnSalvar.setText("SALVAR");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(51, 51, 51));
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagensTelas/excluir.png"))); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(51, 51, 51));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagensTelas/Editar.png"))); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 740, 80));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("NOME COMPLETO:");

        txtCrm.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCrm.setEnabled(false);

        txtEndercoMedico.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtEndercoMedico.setEnabled(false);

        txtCidadeMedico.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCidadeMedico.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("REGISTRO:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("UF:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("UF:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("CIDADE:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("ESPECIALIDADE:");

        txtNomeMedico.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtNomeMedico.setEnabled(false);

        txtTelefoneMedico.setBackground(new java.awt.Color(240, 240, 240));
        txtTelefoneMedico.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        try {
            txtTelefoneMedico.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefoneMedico.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("ENDEREÇO:");

        jcEspecialidades.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jcEspecialidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<< Digite aqui >>" }));
        jcEspecialidades.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jcEspecialidades.setEnabled(false);
        jcEspecialidades.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jcEspecialidadesFocusGained(evt);
            }
        });
        jcEspecialidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcEspecialidadesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jcEspecialidadesMouseEntered(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("TELEFONE:");

        txtId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtId.setEnabled(false);

        JcUFEndereco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));
        JcUFEndereco.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        JcUFEndereco.setEnabled(false);

        JcUFCRM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));
        JcUFCRM.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        JcUFCRM.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("<< Inserir o endereço do local de trabalho >>");

        btnCadEspecialidades.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCadEspecialidades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagensTelas/Novo.png"))); // NOI18N
        btnCadEspecialidades.setText("Cadastrar");
        btnCadEspecialidades.setToolTipText("Cadastrar Especialidade se não estiver cadastrada");
        btnCadEspecialidades.setEnabled(false);
        btnCadEspecialidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadEspecialidadesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcEspecialidades, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCadEspecialidades, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCrm, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JcUFCRM, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtCidadeMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JcUFEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTelefoneMedico))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(txtEndercoMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(80, 80, 80))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomeMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcEspecialidades, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtCrm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCadEspecialidades, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JcUFCRM, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEndercoMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCidadeMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTelefoneMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(JcUFEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JcUFEndereco, txtCidadeMedico, txtCrm, txtEndercoMedico, txtNomeMedico, txtTelefoneMedico});

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 82, 740, 220));

        jTableMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nome Médico", "Especialidade Médica", "CRM", "UF CRM", "Endereço", "Telefone", "Cidade", "UF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMedicos.setRowHeight(20);
        jTableMedicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMedicosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMedicos);
        if (jTableMedicos.getColumnModel().getColumnCount() > 0) {
            jTableMedicos.getColumnModel().getColumn(0).setMinWidth(100);
            jTableMedicos.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTableMedicos.getColumnModel().getColumn(0).setMaxWidth(100);
            jTableMedicos.getColumnModel().getColumn(1).setMinWidth(300);
            jTableMedicos.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTableMedicos.getColumnModel().getColumn(1).setMaxWidth(300);
            jTableMedicos.getColumnModel().getColumn(2).setMinWidth(400);
            jTableMedicos.getColumnModel().getColumn(2).setPreferredWidth(400);
            jTableMedicos.getColumnModel().getColumn(2).setMaxWidth(4000);
            jTableMedicos.getColumnModel().getColumn(3).setMinWidth(0);
            jTableMedicos.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTableMedicos.getColumnModel().getColumn(3).setMaxWidth(0);
            jTableMedicos.getColumnModel().getColumn(4).setMinWidth(0);
            jTableMedicos.getColumnModel().getColumn(4).setPreferredWidth(0);
            jTableMedicos.getColumnModel().getColumn(4).setMaxWidth(0);
            jTableMedicos.getColumnModel().getColumn(5).setMinWidth(0);
            jTableMedicos.getColumnModel().getColumn(5).setPreferredWidth(0);
            jTableMedicos.getColumnModel().getColumn(5).setMaxWidth(0);
            jTableMedicos.getColumnModel().getColumn(6).setMinWidth(0);
            jTableMedicos.getColumnModel().getColumn(6).setPreferredWidth(0);
            jTableMedicos.getColumnModel().getColumn(6).setMaxWidth(0);
            jTableMedicos.getColumnModel().getColumn(7).setMinWidth(0);
            jTableMedicos.getColumnModel().getColumn(7).setPreferredWidth(0);
            jTableMedicos.getColumnModel().getColumn(7).setMaxWidth(0);
            jTableMedicos.getColumnModel().getColumn(8).setMinWidth(0);
            jTableMedicos.getColumnModel().getColumn(8).setPreferredWidth(0);
            jTableMedicos.getColumnModel().getColumn(8).setMaxWidth(0);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 740, 124));

        setSize(new java.awt.Dimension(776, 578));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Receita.png")));
    }
    
     // icone do joptionPane
    Icon icon = new javax.swing.ImageIcon(getClass().getResource("/Imagens/ok.png"));
    
    
    // icone do joptionPane
    Icon iconExcluir = new javax.swing.ImageIcon(getClass().getResource("/Imagens/Excluido.png"));

//    // metodo para contar registros da tabela
//    public void ContarRegistros() {
//
//        int linhas = jTableMedicos.getRowCount();
//        txtRegistros.setText(" " + linhas);
//
//    }
    private void limparCampos() {

        txtId.setText("");
        txtNomeMedico.setText("");
        jcEspecialidades.setSelectedItem(0);
        txtCrm.setText("");
        JcUFCRM.setSelectedItem(0);
        txtTelefoneMedico.setText("");
        txtEndercoMedico.setText("");
        txtCidadeMedico.setText("");
        JcUFEndereco.setSelectedItem(0);

    }

    private void habilitaCampos() {

        txtCrm.setEnabled(true);
        txtNomeMedico.setEnabled(true);
        JcUFCRM.setEnabled(true);
        jTableMedicos.setEnabled(true);
        txtEndercoMedico.setEnabled(true);
        txtCidadeMedico.setEnabled(true);
        txtTelefoneMedico.setEnabled(true);
        JcUFEndereco.setEnabled(true);
        jcEspecialidades.setEnabled(true);

    }

    private void desaabilitaCampos() {
        txtCrm.setEnabled(false);
        txtNomeMedico.setEnabled(false);
        JcUFCRM.setEnabled(false);
        jTableMedicos.setEnabled(false);
        txtEndercoMedico.setEnabled(false);
        txtCidadeMedico.setEnabled(false);
        txtTelefoneMedico.setEnabled(false);
        JcUFEndereco.setEnabled(false);
        jcEspecialidades.setEnabled(false);
        btnCadEspecialidades.setEnabled(false);

    }

    // metodo para colocar a letra em negrito
    Font fonte = new Font("Arial", Font.BOLD, 12);

    private void letrasemNegrito() {
        txtNomeMedico.setFont(fonte);
        txtCrm.setFont(fonte);
        txtNomeMedico.setFont(fonte);
        JcUFCRM.setFont(fonte);
        txtEndercoMedico.setFont(fonte);
        txtCidadeMedico.setFont(fonte);
        txtTelefoneMedico.setFont(fonte);
        JcUFEndereco.setFont(fonte);

    }

    //-------------------------------------------metodo listar,cadastrar,alterar,excluir--------------------------
    public void listarMedicos() {
        Conexao conec = new Conexao();
        DefaultTableModel model = (DefaultTableModel) jTableMedicos.getModel();
        model.setNumRows(0);
        String sql = "Select idMedico,NomeMedico,EspecialidadeMedico,Crm,Uf,EnderecoMedico,TelefoneMedico,CidadeMedico,UfMedico from tbmedicos order by idMedico";
        try {
            pst = Conexao.conector().prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("idMedico"),
                    rs.getString("NomeMedico"),
                    //                    Utilitarios.Utils.convertData(rs.getDate("DataConsulta")),
                    rs.getString("EspecialidadeMedico"),
                    rs.getString("Crm"),
                    rs.getString("Uf"),
                    rs.getString("EnderecoMedico"),
                    rs.getString("TelefoneMedico"),
                    rs.getString("CidadeMedico"),
                    rs.getString("UfMedico")
                });
            }
        } catch (SQLException error) {
            JOptionPane.showMessageDialog(null, error);
        }finally {
            try {
                rs.close();
                pst.close();
                conec.desconectar();
            } catch (Exception ex) {
            }
        }

    }

    private void cadastrarMedicos() {
        Conexao conec = new Conexao();
        String sql = "Insert into tbmedicos(NomeMedico,EspecialidadeMedico,Crm,Uf,EnderecoMedico,TelefoneMedico,CidadeMedico,UfMedico )values(?,?,?,?,?,?,?,?)";

        try {
            pst = Conexao.conector().prepareStatement(sql);

            pst.setString(1, txtNomeMedico.getText());
            pst.setString(2, jcEspecialidades.getSelectedItem().toString());
            pst.setString(3, txtCrm.getText());
            pst.setString(4, JcUFCRM.getSelectedItem().toString());
            pst.setString(5, txtEndercoMedico.getText());
            pst.setString(6, txtTelefoneMedico.getText());
            pst.setString(7, txtCidadeMedico.getText());
            pst.setString(8, JcUFEndereco.getSelectedItem().toString());
            pst.execute();
            JOptionPane.showMessageDialog(rootPane, " Profissional " + txtNomeMedico.getText().toUpperCase() + " salvo com sucesso.", "Inclusão", JOptionPane.INFORMATION_MESSAGE,icon);
            listarMedicos();

        } catch (SQLException error) {
            JOptionPane.showMessageDialog(null, error);
        }finally {
            try {
                rs.close();
                pst.close();
                conec.desconectar();
            } catch (Exception ex) {
            }
        }
    }

    private void deletarMedicos() {
        Conexao conec = new Conexao();
        String sql = "Delete from tbmedicos where idMedico = ?";
        try {
            pst = Conexao.conector().prepareStatement(sql);
            pst.setInt(1, Integer.parseInt(txtId.getText()));
            pst.execute();
            JOptionPane.showMessageDialog(rootPane, " Profissional " + txtNomeMedico.getText() + " Excluido com sucesso.", "Inclusão", JOptionPane.INFORMATION_MESSAGE,iconExcluir);
            listarMedicos();
        } catch (SQLException error) {

            JOptionPane.showMessageDialog(null, error);
        }finally {
            try {
                rs.close();
                pst.close();
                conec.desconectar();
            } catch (Exception ex) {
            }
        }
    }

    private void editarMedicos() {
        Conexao conec = new Conexao();
        String sql = "Update tbMedicos set  NomeMedico=?,EspecialidadeMedico=?,Crm=?,Uf=?,EnderecoMedico=?,TelefoneMedico=?,CidadeMedico=?,UfMedico=? where idMedico = ? ";

        try {
            pst = Conexao.conector().prepareStatement(sql);
            pst.setString(1, txtNomeMedico.getText());
            pst.setString(2, jcEspecialidades.getSelectedItem().toString());
            pst.setString(3, txtCrm.getText());
            pst.setString(4, JcUFCRM.getSelectedItem().toString());
            pst.setString(5, txtEndercoMedico.getText());
            pst.setString(6, txtTelefoneMedico.getText());
            pst.setString(7, txtCidadeMedico.getText());
            pst.setString(8, JcUFEndereco.getSelectedItem().toString());
            pst.setInt(9, Integer.parseInt(txtId.getText()));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, " Profissional " + txtNomeMedico.getText() + " Editado com sucesso.", "Inclusão", JOptionPane.INFORMATION_MESSAGE,icon);
            listarMedicos();

        } catch (SQLException error) {
            JOptionPane.showMessageDialog(null, error);
        }finally {
            try {
                rs.close();
                pst.close();
                conec.desconectar();
            } catch (Exception ex) {
            }
        }
    }

    public void mostraItens() {
        int seleciona = jTableMedicos.getSelectedRow();
        txtId.setText(jTableMedicos.getModel().getValueAt(seleciona, 0).toString());
        txtNomeMedico.setText(jTableMedicos.getModel().getValueAt(seleciona, 1).toString());
        jcEspecialidades.setSelectedItem(jTableMedicos.getModel().getValueAt(seleciona, 2).toString());
        txtCrm.setText(jTableMedicos.getModel().getValueAt(seleciona, 3).toString());
        JcUFCRM.setSelectedItem(jTableMedicos.getModel().getValueAt(seleciona, 4).toString());
        txtEndercoMedico.setText(jTableMedicos.getModel().getValueAt(seleciona, 5).toString());
        txtTelefoneMedico.setText(jTableMedicos.getModel().getValueAt(seleciona, 6).toString());
        txtCidadeMedico.setText(jTableMedicos.getModel().getValueAt(seleciona, 7).toString());
        JcUFEndereco.setSelectedItem(jTableMedicos.getModel().getValueAt(seleciona, 8).toString());
    }

    private void btnSair1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSair1ActionPerformed

        //Pergunta se o usuário deseja realmente sair do sistema
        int sair = JOptionPane.showConfirmDialog(null, "DESEJA SAIR DA TELA CADASTRO PROFISSIONAL ?", "ATENÇÃO", JOptionPane.YES_NO_OPTION);
        if (sair == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_btnSair1ActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        txtNomeMedico.requestFocus();
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
        btnSalvar.setEnabled(true);
        jTableMedicos.setVisible(true);
        btnCadEspecialidades.setEnabled(true);
        habilitaCampos();
        letrasemNegrito();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        if (txtNomeMedico.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Campo Nome do Médico é obrigatório", "Atenção", JOptionPane.WARNING_MESSAGE);
            txtNomeMedico.requestFocus();
            return;
        }

        if (jcEspecialidades.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Campo Especialidades é Obrigatório", "Atenção", JOptionPane.WARNING_MESSAGE);
            jcEspecialidades.requestFocus();
            return;
        }

        if (txtCrm.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Campo CRM é Obrigatório", "Atenção", JOptionPane.WARNING_MESSAGE);
            txtCrm.requestFocus();
            return;
        }

        if (JcUFCRM.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Campo UF CRM é Obrigatório", "Atenção", JOptionPane.WARNING_MESSAGE);
            JcUFCRM.requestFocus();
            return;
        }

        if (txtEndercoMedico.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, " Campo Endereço é Obrigatório", "Atenção", JOptionPane.WARNING_MESSAGE);
            txtEndercoMedico.requestFocus();
            return;
        }

        if (txtCidadeMedico.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Campo Cidade é Obrigatório", "Atenção", JOptionPane.WARNING_MESSAGE);
            txtCidadeMedico.requestFocus();
            return;
        }

        if (JcUFEndereco.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Campo UF é Obrigatório", "Atenção", JOptionPane.WARNING_MESSAGE);
            JcUFEndereco.requestFocus();
            return;
        }

        if (txtTelefoneMedico.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Campo Telefone é Obrigatório", "Atenção", JOptionPane.WARNING_MESSAGE);
            txtTelefoneMedico.requestFocus();
            return;
        }

        cadastrarMedicos();
        limparCampos();
        desaabilitaCampos();
        btnSalvar.setEnabled(false);
        btnNovo.setEnabled(true);
        dispose();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int i = jTableMedicos.getSelectedRow();
        if (i < 0) {
            Msg.alerta(this, "Selecione um Registro!");
            return;
        }
        deletarMedicos();
        desaabilitaCampos();
        limparCampos();
        btnNovo.setEnabled(true);
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int i = jTableMedicos.getSelectedRow();
        if (i < 0) {
            Msg.alerta(this, "Selecione um Registro!");
            return;
        }
        editarMedicos();
        desaabilitaCampos();
        limparCampos();
        btnNovo.setEnabled(true);
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);

    }//GEN-LAST:event_btnEditarActionPerformed

    private void jTableMedicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMedicosMouseClicked
        mostraItens();
        habilitaCampos();
        btnEditar.setEnabled(true);
        btnExcluir.setEnabled(true);
        btnSalvar.setEnabled(false);
        btnNovo.setEnabled(false);
    }//GEN-LAST:event_jTableMedicosMouseClicked

    private void btnCadEspecialidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadEspecialidadesActionPerformed
        TelaCadastroEspecialidade tela = new TelaCadastroEspecialidade();
        tela.setLocationRelativeTo(null);
        tela.setVisible(true);
    }//GEN-LAST:event_btnCadEspecialidadesActionPerformed

    private void jcEspecialidadesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcEspecialidadesFocusGained

    }//GEN-LAST:event_jcEspecialidadesFocusGained

    private void jcEspecialidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcEspecialidadesMouseClicked

    }//GEN-LAST:event_jcEspecialidadesMouseClicked

    private void jcEspecialidadesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcEspecialidadesMouseEntered

    }//GEN-LAST:event_jcEspecialidadesMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroMedicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroMedicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroMedicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroMedicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroMedicos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcUFCRM;
    private javax.swing.JComboBox<String> JcUFEndereco;
    private javax.swing.JButton btnCadEspecialidades;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSair1;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMedicos;
    private javax.swing.JComboBox<String> jcEspecialidades;
    private javax.swing.JTextField txtCidadeMedico;
    private javax.swing.JTextField txtCrm;
    private javax.swing.JTextField txtEndercoMedico;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNomeMedico;
    private javax.swing.JFormattedTextField txtTelefoneMedico;
    // End of variables declaration//GEN-END:variables

    public void populaJComboBoxEspecialidades() {
        String sql = "Select *from tb_especialidades";
        try {
            pst = Conexao.conector().prepareStatement(sql);
            rs = pst.executeQuery();

            while (rs.next()) {
                jcEspecialidades.addItem(rs.getString("tipoEspecialidades"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }

}
